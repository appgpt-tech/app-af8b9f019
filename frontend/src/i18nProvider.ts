//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        userName: 'User Name',
        department: 'Department',
        password: 'Password',
        email: 'Email',
        id: 'id',
      },
    },
    Departments: {
      name: 'Departments',
      fields: {
        departmentName: 'Department Name',
        departmentHead: 'Department Head',
        id: 'id',
      },
    },
    Initiatives: {
      name: 'Initiatives',
      fields: {
        name: 'Name',
        description: 'Description',
        startDate: 'Start Date',
        endDate: 'End Date',
        relatedDepartment: 'Related Department',
        status: 'Status',
        id: 'id',
      },
    },
    Goals: {
      name: 'Goals',
      fields: {
        name: 'Name',
        description: 'Description',
        targetDate: 'Target Date',
        relatedDepartment: 'Related Department',
        status: 'Status',
        id: 'id',
      },
    },
    EmissionSources: {
      name: 'Emission Sources',
      fields: {
        sourceType: 'Source Type',
        quantityUsed: 'Quantity Used',
        emissionFactors: 'Emission Factors',
        totalEmissions: 'Total Emissions',
        id: 'id',
      },
    },
    ResourceUsage: {
      name: 'Resource Usage',
      fields: {
        resourceType: 'Resource Type',
        quantityConsumed: 'Quantity Consumed',
        unitOfMeasurement: 'Unit Of Measurement',
        periodOfConsumption: 'Period Of Consumption',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        userName: 'User Name (fr)',
        department: 'Department (fr)',
        password: 'Password (fr)',
        email: 'Email (fr)',
        id: 'id',
      },
    },
    Departments: {
      name: 'Departments (fr)',
      fields: {
        departmentName: 'Department Name (fr)',
        departmentHead: 'Department Head (fr)',
        id: 'id',
      },
    },
    Initiatives: {
      name: 'Initiatives (fr)',
      fields: {
        name: 'Name (fr)',
        description: 'Description (fr)',
        startDate: 'Start Date (fr)',
        endDate: 'End Date (fr)',
        relatedDepartment: 'Related Department (fr)',
        status: 'Status (fr)',
        id: 'id',
      },
    },
    Goals: {
      name: 'Goals (fr)',
      fields: {
        name: 'Name (fr)',
        description: 'Description (fr)',
        targetDate: 'Target Date (fr)',
        relatedDepartment: 'Related Department (fr)',
        status: 'Status (fr)',
        id: 'id',
      },
    },
    EmissionSources: {
      name: 'Emission Sources (fr)',
      fields: {
        sourceType: 'Source Type (fr)',
        quantityUsed: 'Quantity Used (fr)',
        emissionFactors: 'Emission Factors (fr)',
        totalEmissions: 'Total Emissions (fr)',
        id: 'id',
      },
    },
    ResourceUsage: {
      name: 'Resource Usage (fr)',
      fields: {
        resourceType: 'Resource Type (fr)',
        quantityConsumed: 'Quantity Consumed (fr)',
        unitOfMeasurement: 'Unit Of Measurement (fr)',
        periodOfConsumption: 'Period Of Consumption (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
